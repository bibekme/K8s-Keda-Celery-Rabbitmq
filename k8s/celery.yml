apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-celery-worker-deployment
  namespace: default
  labels:
    app: django-celery-worker
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: django-celery-worker
  template:
    metadata:
      labels:
        app: django-celery-worker
    spec:
      terminationGracePeriodSeconds: 120
      containers:
        - name: django-celery-worker
          image: bibekkhatri/django-celery-keda-example:1.0.0
          command: ["celery", "-A", "core", "worker"]
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "100m"
              memory: "500M"
            limits:
              cpu: "500m"
              memory: "1000M"
          # readinessProbe:
          #   exec:
          #     command:
          #       [
          #         "python",
          #         "-c",
          #         '"import os;from celery.app.control import Inspect;from api import celery_app;exit(0 if os.environ[''HOSTNAME''] in '',''.join(Inspect(app=celery_app).stats().keys()) else 1)"',
          #       ]
          #   initialDelaySeconds: 120
          #   periodSeconds: 300
          # livenessProbe:
          #   exec:
          #     command:
          #       [
          #         "python",
          #         "-c",
          #         '"import os;from celery.app.control import Inspect;from api import celery_app;exit(0 if os.environ[''HOSTNAME''] in '',''.join(Inspect(app=celery_app).stats().keys()) else 1)"',
          #       ]
          #   initialDelaySeconds: 120
          #   periodSeconds: 300
          env:
            - name: CELERY_BROKER_URL
              valueFrom:
                secretKeyRef:
                  name: django
                  key: celery-broker-url
                  optional: false
